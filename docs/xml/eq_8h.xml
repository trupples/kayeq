<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="eq_8h" kind="file" language="C++">
    <compoundname>eq.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includedby refid="eqmath_8h" local="yes">eqmath.h</includedby>
    <includedby refid="ui_8h" local="yes">ui.h</includedby>
    <includedby refid="main_8c" local="yes">main.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>stdint.h</label>
      </node>
      <node id="0">
        <label>eq.h</label>
        <link refid="eq_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>eq.h</label>
        <link refid="eq_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>eqmath.h</label>
        <link refid="eqmath_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="5">
        <label>ui.h</label>
        <link refid="ui_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structequalizer" prot="public">equalizer</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__eq_1ga81a10fb168899efe1d3f89bed47d44b9" prot="public" static="no">
        <name>NFREQ</name>
        <initializer>75</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of controllable frequencies/filters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="eq.h" line="23" column="9" bodyfile="eq.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__eq_1ga35379a3d9baaf243c3f9504e04da1df0" prot="public" static="no">
        <name>LOFREQ</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lowest controllable frequency. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="eq.h" line="24" column="9" bodyfile="eq.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__eq_1ga605684474e9b21615f2b2bb9226d8053" prot="public" static="no">
        <name>HIFREQ</name>
        <initializer>20000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Highest controllable frequency. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="eq.h" line="25" column="9" bodyfile="eq.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__eq_1gad4b622fbd30a08a9390bfa8338a8a54c" prot="public" static="no">
        <name>LOGAIN</name>
        <initializer>-20.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lowest gain the user can set for a filter, in decibels. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="eq.h" line="26" column="9" bodyfile="eq.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__eq_1ga1f7459f1a42b3c3ca79b6bbb430764d7" prot="public" static="no">
        <name>HIGAIN</name>
        <initializer>20.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Highest gain the user can set for a filter, in decibels. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="eq.h" line="27" column="9" bodyfile="eq.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__eq_1gaf369849b9a3240fc2881a00627b98909" prot="public" static="no">
        <type>struct <ref refid="structequalizer" kindref="compound">equalizer</ref></type>
        <definition>typedef struct equalizer  equalizer</definition>
        <argsstring></argsstring>
        <name>equalizer</name>
        <briefdescription>
<para>Equalizer state stores the gain in decibels, Q factor index, and center frequency for each of the NFREQ filters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="eq.h" line="43" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__eq_1ga68c9163eef4048a758d7335ec0f54164" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double eq_q_values[10]</definition>
        <argsstring>[10]</argsstring>
        <name>eq_q_values</name>
        <briefdescription>
<para>The numeric values of the 10 options for the Q factor. </para>        </briefdescription>
        <detaileddescription>
<para>C&apos;s handling of this is quite freaky and it prevents us from declaring the 10 values here, so we must do that in eq.c </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="eq.h" line="34" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__eq_1ga42556d21578a309b8a86cba1b982dd54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eq_init</definition>
        <argsstring>(equalizer *eq)</argsstring>
        <name>eq_init</name>
        <param>
          <type><ref refid="structequalizer" kindref="compound">equalizer</ref> *</type>
          <declname>eq</declname>
        </param>
        <briefdescription>
<para>Initialise an equalizer state to a default Q = 1.8, gain = 0dB for all frequencies. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">eq</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the equalizer to initialise. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="eq.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__eq_1gaf263e6e86c71a41bb5b046d3a46df7e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eq_set_q_option</definition>
        <argsstring>(equalizer *eq, int freq_idx, int q_idx)</argsstring>
        <name>eq_set_q_option</name>
        <param>
          <type><ref refid="structequalizer" kindref="compound">equalizer</ref> *</type>
          <declname>eq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>freq_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q_idx</declname>
        </param>
        <briefdescription>
<para>Control the Q factor of a given filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">eq</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the equalizer to change. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">freq_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of selected frequency. [0; NFREQ-1] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">q_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of Q factor value to apply. [0; 9] </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="eq.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__eq_1ga6a104206c6815e05adaf7fd325b0d007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eq_change_gain</definition>
        <argsstring>(equalizer *eq, int freq_idx, double gain_db_delta)</argsstring>
        <name>eq_change_gain</name>
        <param>
          <type><ref refid="structequalizer" kindref="compound">equalizer</ref> *</type>
          <declname>eq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>freq_idx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gain_db_delta</declname>
        </param>
        <briefdescription>
<para>Change the gain of a given filter by a relative amount, clamping to [LOGAIN; HIGAIN]. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">eq</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the equalizer to change. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">freq_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of selected frequency. [0; NFREQ-1] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gain_db_delta</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount to increase the gain of this frequency, in decibels. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="eq.h" line="65" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="18"><highlight class="preprocessor">#ifndef<sp/>INCLUDED_EQ_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_EQ_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>uint8_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="group__eq_1ga81a10fb168899efe1d3f89bed47d44b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NFREQ<sp/>75<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24" refid="group__eq_1ga35379a3d9baaf243c3f9504e04da1df0" refkind="member"><highlight class="preprocessor">#define<sp/>LOFREQ<sp/>20<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25" refid="group__eq_1ga605684474e9b21615f2b2bb9226d8053" refkind="member"><highlight class="preprocessor">#define<sp/>HIFREQ<sp/>20000<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26" refid="group__eq_1gad4b622fbd30a08a9390bfa8338a8a54c" refkind="member"><highlight class="preprocessor">#define<sp/>LOGAIN<sp/>-20.0<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27" refid="group__eq_1ga1f7459f1a42b3c3ca79b6bbb430764d7" refkind="member"><highlight class="preprocessor">#define<sp/>HIGAIN<sp/>20.0<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor">extern<sp/>const<sp/>double<sp/>eq_q_values[10];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structequalizer" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structequalizer" kindref="compound">equalizer</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gain_db[<ref refid="group__eq_1ga81a10fb168899efe1d3f89bed47d44b9" kindref="member">NFREQ</ref>];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>q_idx[<ref refid="group__eq_1ga81a10fb168899efe1d3f89bed47d44b9" kindref="member">NFREQ</ref>];</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freqs[<ref refid="group__eq_1ga81a10fb168899efe1d3f89bed47d44b9" kindref="member">NFREQ</ref>];</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}<sp/><ref refid="group__eq_1gaf369849b9a3240fc2881a00627b98909" kindref="member">equalizer</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__eq_1ga42556d21578a309b8a86cba1b982dd54" kindref="member">eq_init</ref>(<ref refid="structequalizer" kindref="compound">equalizer</ref><sp/>*eq);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__eq_1gaf263e6e86c71a41bb5b046d3a46df7e2" kindref="member">eq_set_q_option</ref>(<ref refid="structequalizer" kindref="compound">equalizer</ref><sp/>*eq,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>freq_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q_idx);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__eq_1ga6a104206c6815e05adaf7fd325b0d007" kindref="member">eq_change_gain</ref>(<ref refid="structequalizer" kindref="compound">equalizer</ref><sp/>*eq,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>freq_idx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gain_db_delta);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor">#endif<sp/>//<sp/>INCLUDED_EQ_H</highlight></codeline>
    </programlisting>
    <location file="eq.h"/>
  </compounddef>
</doxygen>
